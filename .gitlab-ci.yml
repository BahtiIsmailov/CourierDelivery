image: openjdk:11-jdk

variables:

  ANDROID_COMPILE_SDK: "30"

  OUTPUT_DIR: app/build/outputs/

  ANDROID_BUILD_TOOLS: "30.0.3"

  ANDROID_SDK_TOOLS: "7583922"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1


  - export ANDROID_HOME="${PWD}/android-home"

  - install -d $ANDROID_HOME

  - wget --output-document=$ANDROID_HOME/cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
  - pushd $ANDROID_HOME
  - unzip -d cmdline-tools cmdline-tools.zip
  - pushd cmdline-tools
  - mv cmdline-tools tools || true
  - popd
  - popd
  - export PATH=$PATH:${ANDROID_HOME}/cmdline-tools/tools/bin/
  - sdkmanager --version
  - yes | sdkmanager --licenses || true
  - sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}"
  - sdkmanager "platform-tools"
  - sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}"
  - chmod +x ./gradlew

stages:
  - debugApk
  - releaseApk
  - releaseBundle
  - releaseApp
  - deploy
  - notify

# Make Project
assembleDebug:
  interruptible: true
  stage: debugApk
  script:
    - ./gradlew clean assembleDebug
  retry: 2
  artifacts:
    paths:
      - $OUTPUT_DIR
  only:
    - dev

assembleReleaseApp:
  interruptible: true
  stage: releaseApp
  script:
    - echo $KEYSTORE_FILE | base64 -d > keystore.jks
    - ./gradlew clean assembleRelease bundleRelease
  after_script:
    - apt-get --quiet --yes install jq
    - VER=$(awk -F= '$1=="VERSION_MAJOR"{a=$2}$1=="VERSION_MINOR"{b=$2}$1=="VERSION_BUILD"{c=$2}$1=="VERSION_CODE"{v=$2}END{print a"."b"."c"_"v}' app/version.properties)
    - TVER=$(awk -F= '$1=="VERSION_MAJOR"{a=$2}$1=="VERSION_MINOR"{b=$2}$1=="VERSION_BUILD"{c=$2}$1=="VERSION_CODE"{v=$2}END{print a"."b"."c"\_"v}' app/version.properties)
    - sh ci-notify.sh $CI_JOB_ID $TVER ${OUTPUT_DIR}apk/release/release_${VER}.apk ${OUTPUT_DIR}bundle/release/app-release.aab
  artifacts:
    name: pipeline_${CI_PIPELINE_ID}
    paths:
      - ${OUTPUT_DIR}*/release/*.a*
  only:
    - master

bundleRelease:
  interruptible: true
  stage: releaseBundle
  script:
    - echo $KEYSTORE_FILE | base64 -d > keystore.jks
    - ./gradlew clean bundleRelease
  artifacts:
    paths:
      - ${OUTPUT_DIR}bundle/release
  only:
    - masterX

deploy:
  stage: deploy
  interruptible: true
  script:
    #deploy success
    - apt-get --quiet --yes install jq
    - sh ci-notify.sh $DJ_ID
  only:
    - masterX

notify_error:
  stage: notify
  interruptible: true
  script:
    - sh clean ci-notify.sh ‚ùå
  when: on_failure #deploy fail