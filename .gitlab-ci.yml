stages:
  - build sdk
  - build apk
  - cleanup

sdk:
  stage: build sdk
  script:
    - docker build --file dockerfiles/sdk --label intermediate --label project=${CI_PROJECT_NAME} --label version=${CI_PIPELINE_ID}-${CI_COMMIT_REF_SLUG} --tag ${CI_REGISTRY_IMAGE}/sdk:${CI_PIPELINE_ID}-${CI_COMMIT_REF_SLUG} .

.apk_build_common: &apk_build_common
  stage: build apk
  image:
    name: ${CI_REGISTRY_IMAGE}/sdk:${CI_PIPELINE_ID}-${CI_COMMIT_REF_SLUG}
  variables:
    GRADLE_USER_HOME: /storage/.gradle
  script:
    - echo ${JKS_RELEASE} | base64 -d > private/release.jks
    - bash ./gradlew assemble${CI_JOB_NAME}
  artifacts:
    name: apk-${CI_JOB_NAME}-${CI_PIPELINE_ID}-${CI_COMMIT_REF_SLUG}
    paths:
      - apk/

debug:
  <<: *apk_build_common
  only:
    refs:
      - /^dev$/

release:
  <<: *apk_build_common
  only:
    refs:
      - /^master$/

images:
  stage: cleanup
  tags:
    - docker-prune
  variables:
    GIT_STRATEGY: none
  when: always
  script:
    - apk add --no-cache coreutils
    - docker image prune -af --filter label=project=${CI_PROJECT_NAME} --filter until=$(date +%Y-%m-%d -d "-3 day")
