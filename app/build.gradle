plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlinx-serialization'

android {

    signingConfigs {
        release {
            storeFile file('../private/keystore.jks')
            storePassword 'W9jUStPGd53U1Jks_store'
            keyAlias 'wbgo'
            keyPassword 'DhtMrW9OU1Jks_alias'
        }
    }

    compileSdkVersion 32
    buildToolsVersion "30.0.3"

    def versionPropsFile = file('version.properties')

    Properties versionProps = new Properties()

    if (!versionPropsFile.exists()) {
        versionProps['VERSION_MAJOR'] = "0"
        versionProps['VERSION_MINOR'] = "0"
        versionProps['VERSION_BUILD'] = "0"
        versionProps['VERSION_CODE'] = "0"
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    if (versionPropsFile.canRead()) {

        versionProps.load(new FileInputStream(versionPropsFile))

        def runTasks = gradle.startParameter.taskNames
        def versionMinor = versionProps['VERSION_MINOR'].toInteger()
        def versionBuild = versionProps['VERSION_BUILD'].toInteger()
        def versionCod = versionProps['VERSION_CODE'].toInteger()

        def isNew = false

        print(runTasks)
        if (':app:bundleRelease' in runTasks) {
            //Сборка для всех
            versionMinor++
            versionCod++
            isNew = true
        }
        if (':app:bundleReleaseTest' in runTasks) {
            //Сборка для тестирующих курьеров
            versionBuild++
            versionCod++
            isNew = true
        }

        versionProps['VERSION_MINOR'] = versionMinor.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_CODE'] = versionCod.toString()
        if (isNew) {
            versionProps.store(versionPropsFile.newWriter(), null)
        }

        defaultConfig {
            multiDexEnabled true
            applicationId "ru.wb.go"
            minSdkVersion 21
            targetSdkVersion 32
            versionCode versionCod
            versionName "0." + versionMinor + "." + versionBuild

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            vectorDrawables.useSupportLibrary = true

            ndk {
                abiFilters "arm64-v8a", "armeabi-v7a", "x86_64", "x86"
            }

        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }

    buildTypes {
        release {
//            debuggable true
//            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [appName: "WB Go"]
            signingConfig signingConfigs.release
            matchingFallbacks = ['release']
            ndk{
                debugSymbolLevel 'FULL'
            }
        }
        releaseTest {
            manifestPlaceholders = [appName: "WB Go"]
            //FIXME необходмио внедрить тестовую информацию
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            matchingFallbacks = ['release']
        }
        debug {
//            minifyEnabled true
            applicationIdSuffix ".debug"
            manifestPlaceholders = [appName: "WB Go debug"]
            signingConfig signingConfigs.debug
        }

        debugQA {
            initWith debug
            debuggable true
            signingConfig signingConfigs.debug
        }

    }

    task outputApk {
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                def fileName = "${variant.name}_${variant.versionName}_${variant.versionCode}.apk"
                outputFileName = fileName
            }
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
        viewBinding true
    }

    lintOptions {
        abortOnError false
        warningsAsErrors true
        //lintConfig file('./code_quality_tools/lint.xml')
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.fragment:fragment-ktx:1.4.0'
    implementation 'androidx.work:work-runtime-ktx:2.8.0-alpha01'

    implementation 'com.google.android.material:material:1.5.0'
    implementation 'com.google.android.gms:play-services-location:19.0.1'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.room:room-runtime:2.4.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation files('../app/libs/commons-net-3.3-ftp.jar')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"

    //ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'

    //Koin main features for Android (Scope,ViewModel ...)
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-android-compat:$koin_version"
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"

    //room
    implementation "androidx.room:room-rxjava2:$version_room"
    kapt "androidx.room:room-compiler:$version_room"
    kapt "android.arch.persistence.room:compiler:1.1.1"
    implementation "android.arch.persistence.room:runtime:1.1.1"
//    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    annotationProcessor 'androidx.room:room-compiler:2.4.1'

    // navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'

    //delegates
    api 'com.hannesdorfmann:adapterdelegates3:3.0.1'

    //rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha1'

    //pref
    implementation 'androidx.preference:preference-ktx:1.2.0'

    //date tame
    implementation 'joda-time:joda-time:2.9.9'

    //scanner
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    //pdf
    implementation 'com.github.mhiew:android-pdf-viewer:3.2.0-beta.1'

    //map
    implementation 'org.osmdroid:osmdroid-android:6.1.11'

    //firebase
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics'

    //yandex
    implementation 'com.yandex.android:mobmetricalib:3.21.0'

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.0-RC"

}